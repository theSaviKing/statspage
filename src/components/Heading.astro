---
export interface Props {
    title?: string;
    header?: string;
    footer?: string;
    large?: boolean;
    page?: string;
}
const { title = "StatsPage", header = "", footer = "", large = false, page = "" } = Astro.props
const otherClassList = "uppercase tracking-widest " + (large ? "text-xl" : "text-lg")
const TitleElement = (page == "" ? "p" : "a")
---
<div class="flex flex-col justify-center items-center gap-1 select-none">
    {header == "" ? <></> : <p class={otherClassList}>{header}</p>}
    <TitleElement href="/" id={page == "" ? "" : "title"} class:list={['font-black', 'font-display', 'text-primary', {"text-4xl md:text-5xl": large}, {"text-3xl md:text-4xl": !large}, 'relative']}>
        {title}
        <span></span>
    </TitleElement>
    {footer == "" ? <></> : <p class={otherClassList}>{footer}</p>}
    {page == "" ? <></> : <p class:list={['font-bold', 'font-display', 'text-inherit', {'text-5xl md:text-6xl': large}, {'text-3xl md:text-4xl': !large}, 'mb-10', 'mt-2']}>{page}<span class="title-underline"></span></p>}
</div>
<style>
    p:has(.title-underline) {
        @apply relative;
        &:hover {
            @apply px-2 transition-all
        }
    }
    .title-underline {
        @apply absolute bottom-0 inset-x-0 h-3 bg-secondary -z-10 mx-4 transition-[height]
    }
    p:hover .title-underline {
        @apply w-full h-full mx-0 px-2 transition-[height]
    }
    #title span {
        @apply absolute inset-x-0 h-[1px] block bg-accent transition-all w-0;
        animation-timing-function: cubic-bezier(1,0,0,1)
    }
    #title:hover span {
        width: 100%;
    }
</style>